<Window x:Class="SportClub.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:toolkit="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:SportClub.ViewModel"
        xmlns:misc="clr-namespace:SportClub.Miscellaneous"
        mc:Ignorable="d"
        Title="Администратор" Height="700" Width="1200">
    <Window.Resources>
        <misc:ResetFilterClientParametersConverter x:Key="ResetFilterClientConverter" />
        <misc:ResetFilterTrainersParametersConverter x:Key="ResetFilterTrainerConverter" />

        <Style TargetType="DataGrid">
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="color1">
            <Setter Property="Background"  Value="SeaShell" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="color2">
            <Setter Property="Background"  Value="AntiqueWhite" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="buttonCRUD">
            <Setter Property="Background"  Value="Snow" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="fontSizeBig">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style TargetType="{x:Type Control}" x:Key="fontSizeNormal">
            <Setter Property="FontSize" Value="10" />
        </Style>

        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource fontSizeBig}"></Style>
        <Style TargetType="{x:Type Menu}" BasedOn="{StaticResource color2}"></Style>
        <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource color1}"></Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource buttonCRUD}"></Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="17*"/>
        </Grid.RowDefinitions>

        <Menu x:Name="TopMenu" Grid.Row="0" VerticalAlignment="Top" Height="32">
            <MenuItem Header="Файл">
                <MenuItem Header="Сохранить" />
                <MenuItem Header="Закрыть" />
            </MenuItem>
            <MenuItem Header="Статистика" Visibility="Hidden"/>
            <MenuItem Header="SQL запрос" Click="SQLquery_Click" />
            <MenuItem Header="Анализ эффективности" Visibility="Hidden"/>
        </Menu>

        <TabControl Grid.Row="1" >
            <!-- < Clients TAB > -->
            <TabItem x:Name="ClientsTab" Header="Клиенты БИО" d:DataContext="{d:DesignInstance d:Type=local:ClientsTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="ClientsGrid" ItemsSource="{Binding Context.Clients.Local}" SelectedItem="{Binding SelectedClient, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding ClientId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Фамилия" Binding="{Binding FirstName}"/>
                            <DataGridTextColumn Header="Имя" Binding="{Binding LastName}"/>
                            <DataGridTextColumn Header="Дата рождения" Binding="{Binding Path=BirthDate, StringFormat=\{0:dd.MM.yy\}}"/>
                            <DataGridTextColumn Header="Пол" Binding="{Binding Gender}"/>
                            <DataGridTextColumn Header="Телефон" Binding="{Binding PhoneNumber}"/>
                            <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                            <DataGridTextColumn Header="Регистрация" Binding="{Binding Path=RegistrationDate, StringFormat=\{0:dd.MM.yy\}}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ClientsGridSelectionChangedCommand}"/>
                                <i:InvokeCommandAction Command="{Binding TrainingSelectChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Clients CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[7].Header, StringFormat={}{0}:}"/>

                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding ClientInfo.FirstName, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding ClientInfo.LastName, Mode=TwoWay}"/>
                                    <DatePicker Grid.Row="2" Grid.Column="1" Margin="3" SelectedDate="{Binding ClientInfo.BirthDate, Mode=TwoWay}"/>
                                    <ComboBox x:Name="GenderType" Grid.Row="3" Grid.Column="1" Margin="3" 
                                              SelectedValue="{Binding ClientInfo.Gender, Mode=TwoWay}" ItemsSource="{Binding Genders, Mode=OneTime}" />

                                    <TextBox Grid.Row="4" Grid.Column="1" Margin="3" Text="{Binding ClientInfo.PhoneNumber, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding ClientInfo.Email, Mode=TwoWay}"/>
                                    <DatePicker Grid.Row="6" Grid.Column="1" Margin="3" DisplayDateStart="{x:Static local:DtHelper.ClientStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Today}" SelectedDate="{Binding ClientInfo.RegistrationDate, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper.ClientStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>

                                    <DockPanel Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddClientCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateClientCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteClientCommand}"/>
                                        <Button Margin="5" Padding="10,2,10,2" HorizontalAlignment="Right" Content="Договор" Command="{Binding SaveDocumentClient}"/>
                                    </DockPanel>
                                </Grid>
                            </Expander>

                            <!-- < Clients Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[0].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5" Text="{Binding ElementName=ClientsGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>

                                    <TextBox x:Name="IdTbFilter" Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding ClientFilter.ClientId, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="FnTbFilter" Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding ClientFilter.FirstName, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="LnTbFilter" Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding ClientFilter.LastName, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <DatePicker x:Name="BdDpFilter" Grid.Row="3" Grid.Column="1" Margin="3" SelectedDate="{Binding ClientFilter.BirthDate}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectedDateChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </DatePicker>
                                    <ComboBox x:Name="GDpFilter" Grid.Row="4" Grid.Column="1" Margin="3" 
                                              SelectedValue="{Binding ClientFilter.Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                ItemsSource="{Binding Genders, Mode=OneTime}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <TextBox x:Name="PnTbFilter" Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding ClientFilter.PhoneNumber, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="ETbFilter" Grid.Row="6" Grid.Column="1" Margin="3" Text="{Binding ClientFilter.Email, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding ClientsFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Button Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Margin="4,5,4,5" Content="Сбросить фильтры" Command="{Binding ResetFilterClientCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ResetFilterClientConverter}">
                                                <Binding ElementName="IdTbFilter"/>
                                                <Binding ElementName="FnTbFilter"/>
                                                <Binding ElementName="LnTbFilter"/>
                                                <Binding ElementName="BdDpFilter"/>
                                                <Binding ElementName="GDpFilter"/>
                                                <Binding ElementName="PnTbFilter"/>
                                                <Binding ElementName="ETbFilter"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    <DataGrid Grid.Row="8" Grid.Column="0"  Grid.ColumnSpan="2" ItemsSource="{Binding FilteredClientList}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="№" Binding="{Binding ClientId}" IsReadOnly="True"/>
                                            <DataGridTextColumn Header="Фамилия" Binding="{Binding FirstName}"/>
                                            <DataGridTextColumn Header="Имя" Binding="{Binding LastName}"/>
                                            <DataGridTextColumn Header="Дата рождения" Binding="{Binding Path=BirthDate, StringFormat=\{0:dd.MM.yy\}}"/>
                                            <DataGridTextColumn Header="Пол" Binding="{Binding Gender}"/>
                                            <DataGridTextColumn Header="Телефон" Binding="{Binding PhoneNumber}"/>
                                            <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                                            <DataGridTextColumn Header="Регистрация" Binding="{Binding Path=RegistrationDate, StringFormat=\{0:dd.MM.yy\}}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>

                                    <DataGrid Grid.Row="9" Grid.Column="0" Grid.ColumnSpan="2" ItemsSource="{Binding TrainingsList}" Margin="10,10.4,10.4,10.2">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="№" Binding="{Binding TrainingId}"/>
                                            <DataGridTextColumn Header="Клиент" Binding="{Binding ClientId}"/>
                                            <DataGridTextColumn Header="Дата" Binding="{Binding TrainingDate}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Clients TAB > -->

            <!-- < Trainers TAB > -->
            <TabItem x:Name="TrainersTab" Header="Тренеры БИО" d:DataContext="{d:DesignInstance d:Type=local:TrainersTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="TrainersGrid" ItemsSource="{Binding Context.Trainers.Local}" SelectedItem="{Binding SelectedTrainer, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding TrainerId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Фамилия" Binding="{Binding FirstName}"/>
                            <DataGridTextColumn Header="Имя" Binding="{Binding LastName}"/>
                            <DataGridTextColumn Header="Дата рождения" Binding="{Binding Path=BirthDate, StringFormat=\{0:dd.MM.yy\}}"/>
                            <DataGridTextColumn Header="Пол" Binding="{Binding Gender}"/>
                            <DataGridTextColumn Header="Телефон" Binding="{Binding PhoneNumber}"/>
                            <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                            <DataGridTextColumn Header="Регистрация" Binding="{Binding Path=ApplyDate, StringFormat=\{0:dd.MM.yy\}}"/>
                            <DataGridTextColumn Header="Спорт достижение" Binding="{Binding SportAchivements}"/>
                            <DataGridTextColumn Header="Образование" Binding="{Binding Education}"/>
                            <DataGridTextColumn Header="Опыт работы" Binding="{Binding Experience}"/>
                            <DataGridTextColumn Header="Зарплата" Binding="{Binding Salary}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TrainersGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Trainers CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[7].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="7" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[8].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="8" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[9].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="9" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[10].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="10" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[11].Header, StringFormat={}{0}:}"/>

                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.FirstName, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.LastName, Mode=TwoWay}"/>
                                    <DatePicker Grid.Row="2" Grid.Column="1" Margin="3" SelectedDate="{Binding TrainerInfo.BirthDate, Mode=TwoWay}"/>
                                    <ComboBox x:Name="GenderTypeT" Grid.Row="3" Grid.Column="1" Margin="3" 
                                              SelectedValue="{Binding TrainerInfo.Gender, Mode=TwoWay}" ItemsSource="{Binding Genders, Mode=OneTime}" />

                                    <TextBox Grid.Row="4" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.PhoneNumber, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.Email, Mode=TwoWay}"/>
                                    <DatePicker Grid.Row="6" Grid.Column="1" Margin="3" DisplayDateStart="{x:Static local:DtHelper1.TrainerStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Today}"
                                                SelectedDate="{Binding TrainerInfo.ApplyDate, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper1.TrainerStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>
                                    <TextBox Grid.Row="7" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.SportAchivements, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="8" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.Education, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="9" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.Experience, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="10" Grid.Column="1" Margin="3" Text="{Binding TrainerInfo.Salary, Mode=TwoWay}"/>

                                    <DockPanel Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddTrainerCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateTrainerCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteTrainerCommand}"/>
                                        <Button Margin="5" Padding="10,2,10,2" HorizontalAlignment="Right" Content="Договор" Command="{Binding SaveDocumentTrainer}"/>
                                    </DockPanel>
                                </Grid>
                            </Expander>

                            <!-- < Trainers Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[0].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="7" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[10].Header, StringFormat={}{0} меньше чем:}"/>
                                    <TextBlock Grid.Row="8" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[10].Header, StringFormat={}{0} больше или равно:}"/>
                                    <TextBlock Grid.Row="9" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[11].Header, StringFormat={}{0} меньше чем:}"/>
                                    <TextBlock Grid.Row="10" Grid.Column="0" Margin="5" Text="{Binding ElementName=TrainersGrid, Path=Columns[11].Header, StringFormat={}{0} больше или равно:}"/>

                                    <TextBox x:Name="IdTrTbFilter" Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding TrainerFilter.TrainerId, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="FnFrTbFilter" Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding TrainerFilter.FirstName, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="LnTrTbFilter" Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding TrainerFilter.LastName, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <DatePicker x:Name="BdTrDpFilter" Grid.Row="3" Grid.Column="1" Margin="3" SelectedDate="{Binding TrainerFilter.BirthDate}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectedDateChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </DatePicker>
                                    <ComboBox x:Name="GTrFilter" Grid.Row="4" Grid.Column="1" Margin="3" 
                                              SelectedValue="{Binding TrainerFilter.Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                ItemsSource="{Binding Genders, Mode=OneTime}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="SelectionChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </ComboBox>
                                    <TextBox x:Name="PnTrTbFilter" Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding TrainerFilter.PhoneNumber, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="ETrTbFilter" Grid.Row="6" Grid.Column="1" Margin="3" Text="{Binding TrainerFilter.Email, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="MinExpTbFilter" Grid.Row="7" Grid.Column="1" Margin="3" Text="{Binding LessExperience, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="MaxExpTbFilter" Grid.Row="8" Grid.Column="1" Margin="3" Text="{Binding MoreExperience, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="MinSalTbFilter" Grid.Row="9" Grid.Column="1" Margin="3" Text="{Binding LessSalary, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>
                                    <TextBox x:Name="MaxSalTbFilter" Grid.Row="10" Grid.Column="1" Margin="3" Text="{Binding MoreSalary, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="TextChanged">
                                                <i:InvokeCommandAction Command="{Binding TrainersFilterChangedCommand}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </TextBox>

                                    <Button Grid.Row="11" Grid.Column="0" Grid.ColumnSpan="2" Margin="4,5,4,5" Content="Сбросить фильтры" Command="{Binding ResetFilterTrainerCommand}">
                                        <Button.CommandParameter>
                                            <MultiBinding Converter="{StaticResource ResetFilterTrainerConverter}">
                                                <Binding ElementName="IdTrTbFilter"/>
                                                <Binding ElementName="FnFrTbFilter"/>
                                                <Binding ElementName="LnTrTbFilter"/>
                                                <Binding ElementName="BdTrDpFilter"/>
                                                <Binding ElementName="GTrFilter"/>
                                                <Binding ElementName="PnTrTbFilter"/>
                                                <Binding ElementName="ETrTbFilter"/>
                                                <Binding ElementName="MinExpTbFilter"/>
                                                <Binding ElementName="MaxExpTbFilter"/>
                                                <Binding ElementName="MinSalTbFilter"/>
                                                <Binding ElementName="MaxSalTbFilter"/>
                                            </MultiBinding>
                                        </Button.CommandParameter>
                                    </Button>
                                    <DataGrid Grid.Row="12" Grid.Column="0"  Grid.ColumnSpan="2" ItemsSource="{Binding FilteredTrainerList}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="№" Binding="{Binding ClientId}" IsReadOnly="True"/>
                                            <DataGridTextColumn Header="Фамилия" Binding="{Binding FirstName}"/>
                                            <DataGridTextColumn Header="Имя" Binding="{Binding LastName}"/>
                                            <DataGridTextColumn Header="Дата рождения" Binding="{Binding Path=BirthDate, StringFormat=\{0:dd.MM.yy\}}"/>
                                            <DataGridTextColumn Header="Пол" Binding="{Binding Gender}"/>
                                            <DataGridTextColumn Header="Телефон" Binding="{Binding PhoneNumber}"/>
                                            <DataGridTextColumn Header="Email" Binding="{Binding Email}"/>
                                            <DataGridTextColumn Header="Регистрация" Binding="{Binding Path=ApplyDate, StringFormat=\{0:dd.MM.yy\}}"/>
                                            <DataGridTextColumn Header="Спорт достижение" Binding="{Binding SportAchivements}"/>
                                            <DataGridTextColumn Header="Образование" Binding="{Binding Education}"/>
                                            <DataGridTextColumn Header="Опыт работы" Binding="{Binding Experience}"/>
                                            <DataGridTextColumn Header="Зарплата" Binding="{Binding Salary}"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Trainers TAB > -->

            <!-- < Tariff TAB > -->
            <TabItem x:Name="TariffTab" Header="Тарифы" d:DataContext="{d:DesignInstance d:Type=local:TariffTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="TariffsGrid" ItemsSource="{Binding Context.Tariffs.Local}" SelectedItem="{Binding SelectedTariff, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding TariffId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Стоимость" Binding="{Binding Price}"/>
                            <DataGridTextColumn Header="Посещения" Binding="{Binding VisitNumber}"/>
                            <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTraining}"/>
                            <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTraining}"/>
                            <DataGridTextColumn Header="Кол-во дней" Binding="{Binding Duration}"/>
                            <DataGridTextColumn Header="Дополнительно" Binding="{Binding AdditionalInformation}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TariffsGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Tariff CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5" Text="{Binding ElementName=TariffsGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>

                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.Price, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="1" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.VisitNumber, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="2" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.PersonalTraining, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="3" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.GroupTraining, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="4" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.Duration, Mode=TwoWay}"/>
                                    <TextBox Grid.Row="5" Grid.Column="1" Margin="3" Text="{Binding TariffInfo.AdditionalInformation, Mode=TwoWay}"/>

                                    <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="30,10,0,0" Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddTariffCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateTariffCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteTariffCommand}"/>
                                    </StackPanel>
                                </Grid>
                            </Expander>

                            <!-- < Clients Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры" IsEnabled="False">

                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Tariff TAB > -->

            <!-- < Subscription TAB > -->
            <TabItem x:Name="SubscriptionTab" Header="Абонeменты" d:DataContext="{d:DesignInstance d:Type=local:SubscriptionsTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="SubscriptionGrid" ItemsSource="{Binding Context.Subscriptions.Local}" SelectedItem="{Binding SelectedSubscription, Mode=TwoWay}" Grid.ColumnSpan="3" Margin="0,0,679,-0.2">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Тариф" Binding="{Binding Tariff.TariffId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Посещения" Binding="{Binding VisitLeft}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTrainingLeft}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTrainingLeft}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Покупка" Binding="{Binding BuyDate, StringFormat=\{0:dd MM yyyy\}}"/>
                            <DataGridTextColumn Header="Действен до" Binding="{Binding ValidityDate, StringFormat=\{0:dd MM yyyy\}}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding SubscriptionGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Subscription CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=SubscriptionGrid, Path=Columns[0].Header, StringFormat={}{0}:}" />
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=SubscriptionGrid, Path=Columns[1].Header, StringFormat={}{0}:}" />
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=SubscriptionGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding SubscriptionInfo.Client.ClientId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding SubscriptionInfo.Client.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding SubscriptionInfo.Client.LastName}" />
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Context.Clients.Local}"
                                            SelectedItem="{Binding SubscriptionInfo.Client}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Context.Tariffs.Local}"
                                            SelectedItem="{Binding SubscriptionInfo.Tariff}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <DatePicker Grid.Row="3" Grid.Column="1" Margin="3.2,3,2.6,3.6" DisplayDateStart="{x:Static local:DtHelper.ClientStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Now}"
                                                SelectedDate="{Binding SubscriptionInfo.BuyDate, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper.ClientStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>

                                    <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Обновить" Command="{Binding UpdateSubscriptionCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddSubscriptionCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteSubscriptionCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < Subscription Filter > -->
                            <Expander Grid.Row="1"  Header="Тарифы">
                                <DataGrid Grid.ColumnSpan="2" ItemsSource="{Binding Context.Tariffs.Local}" Margin="10,10.4,10.4,10.2">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="№" Binding="{Binding TariffId}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Стоимость" Binding="{Binding Price}"/>
                                        <DataGridTextColumn Header="Посещения" Binding="{Binding VisitNumber}"/>
                                        <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTraining}"/>
                                        <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTraining}"/>
                                        <DataGridTextColumn Header="Кол-во дней" Binding="{Binding Duration}"/>
                                        <DataGridTextColumn Header="Дополнительно" Binding="{Binding AdditionalInformation}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Subscription TAB > -->

            <!-- < AdditionalGroupTraining TAB > -->
            <TabItem x:Name="AdditionalGroupTrainingTab" Header="Инфо групповые">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid x:Name="GroupTrainingTypeTab" Grid.Row="0" d:DataContext="{d:DesignInstance d:Type=local:GroupTrainingTypeTabViewModel, IsDesignTimeCreatable=True}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <DataGrid Grid.Column="0" x:Name="GroupTrainingTypeGrid" ItemsSource="{Binding Context.GroupTrainingTypes.Local}" SelectedItem="{Binding SelectedGroupTrainingType, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="№" Binding="{Binding GroupTrainingTypeId}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Название тренировки" Binding="{Binding GroupTrainingTypeName}"/>
                            </DataGrid.Columns>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding GroupTrainingTypeGridSelectionChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DataGrid>

                        <Border Grid.Row="0" Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                            <!-- < GroupTrainingType CRUD > -->
                            <Expander  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="5*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=GroupTrainingTypeGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding GroupTrainingTypeInfo.GroupTrainingTypeName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="30,10,0,0" Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddGroupTrainingTypeCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateGroupTrainingTypeCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteGroupTrainingTypeCommand}"/>
                                    </StackPanel>
                                </Grid>
                            </Expander>
                        </Border>
                    </Grid>

                    <Grid x:Name="RoomsTab" Grid.Row="1" d:DataContext="{d:DesignInstance d:Type=local:RoomsTabViewModel, IsDesignTimeCreatable=True}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <DataGrid Grid.Column="0" x:Name="RoomsGrid" ItemsSource="{Binding Context.Rooms.Local}" SelectedItem="{Binding SelectedRoom, Mode=TwoWay}">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="№" Binding="{Binding RoomId}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Название зала" Binding="{Binding RoomName}"/>
                            </DataGrid.Columns>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <i:InvokeCommandAction Command="{Binding RoomGridSelectionChangedCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </DataGrid>

                        <Border Grid.Row="0" Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                            <!-- < Room CRUD > -->
                            <Expander  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5" Text="{Binding ElementName=RoomsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding RoomInfo.RoomName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <StackPanel Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="30,10,0,0" Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddRoomCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateRoomCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteRoomCommand}"/>
                                    </StackPanel>
                                </Grid>
                            </Expander>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>
            <!-- </ AdditionalGroupTrainingTab TAB > -->

            <!-- < GroupTraining TAB > -->
            <TabItem x:Name="GroupTrainingsTab" Header="Групповые" d:DataContext="{d:DesignInstance d:Type=local:GroupTrainingTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="GroupTrainingsGrid" ItemsSource="{Binding Context.GroupTrainings.Local}" SelectedItem="{Binding SelectedGroupTraining, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding GroupTrainingId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Название" Binding="{Binding GroupTrainingType.GroupTrainingTypeName}"/>
                            <DataGridTextColumn Header="Тренер" Binding="{Binding Trainer.TrainerId}"/>
                            <DataGridTextColumn Header="Зал" Binding="{Binding Room.RoomName}"/>
                            <DataGridTextColumn Header="Дата" Binding="{Binding Date, StringFormat=\{0:dd MM yyyy\}}"/>
                            <DataGridTextColumn Header="Время" Binding="{Binding StartTime, StringFormat=\{0:HH mm\}}"/>
                            <DataGridTextColumn Header="Лимит" Binding="{Binding MaxAttenders}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding GroupTrainingGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < GroupTraining CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[5].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="6" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=GroupTrainingsGrid, Path=Columns[6].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding GroupTrainingInfo.Trainer.TrainerId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding GroupTrainingInfo.Trainer.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding GroupTrainingInfo.Trainer.LastName}" />
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Context.Trainers.Local}"
                                            SelectedItem="{Binding GroupTrainingInfo.Trainer}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Context.GroupTrainingTypes.Local}"
                                            SelectedItem="{Binding GroupTrainingInfo.GroupTrainingType}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Context.Rooms.Local}"
                                            SelectedItem="{Binding GroupTrainingInfo.Room}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <DatePicker Grid.Row="4" Grid.Column="1" Margin="3.2,3,2.6,3.6" DisplayDateStart="{x:Static local:DtHelper.ClientStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Now}"
                                                SelectedDate="{Binding GroupTrainingInfo.Date, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper.ClientStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>
                                    <toolkit:TimePicker Grid.Row="5" Grid.Column="1" Value="{Binding GroupTrainingInfo.StartTime}" Text="{Binding GroupTrainingInfo.StartTime, Mode=TwoWay}" />
                                    <TextBox Grid.Row="6" Grid.Column="1" Margin="3" Text="{Binding GroupTrainingInfo.MaxAttenders, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                    <Grid Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddGroupTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateGroupTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteGroupTrainingCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < GroupTraining Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры" IsEnabled="False">

                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ GroupTraining TAB > -->

            <!-- < WorkShift TAB > -->
            <TabItem x:Name="WorkShiftTab" Header="Рабочие смены" d:DataContext="{d:DesignInstance d:Type=local:WorkShiftTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="WorkShiftGrid" ItemsSource="{Binding Context.WorkShifts.Local}" SelectedItem="{Binding SelectedWorkShift, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding WorkShiftId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="День недели" Binding="{Binding DayOfWeek}"/>
                            <DataGridTextColumn Header="Начало" Binding="{Binding StartHour, StringFormat=\{0:HH mm\}}" />
                            <DataGridTextColumn Header="Конец" Binding="{Binding EndHour, StringFormat=\{0:HH mm\}}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding WorkShiftGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < WorkShift CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=WorkShiftGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=WorkShiftGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=WorkShiftGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>

                                    <ComboBox Grid.Row="0" Grid.Column="1" ItemsSource="{Binding DayOfWeekRussians}" SelectedItem="{Binding WorkShiftInfo.DayOfWeek}" />
                                    <toolkit:TimePicker Grid.Row="1" Grid.Column="1" Value="{Binding WorkShiftInfo.StartHour}" Text="{Binding WorkShiftInfo.StartHour, Mode=TwoWay}" />
                                    <toolkit:TimePicker Grid.Row="2" Grid.Column="1" Value="{Binding WorkShiftInfo.EndHour}" Text="{Binding WorkShiftInfo.EndHour, Mode=TwoWay}" />
                                    <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="30,10,0,0" Orientation="Horizontal" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Button Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddWorkShiftCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateWorkShiftCommand}"/>
                                        <Button Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteWorkShiftCommand}"/>
                                    </StackPanel>
                                </Grid>
                            </Expander>

                            <!-- < WorkShift Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры" IsEnabled="False">

                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ WorkShift TAB > -->

            <!-- < Schedule TAB > -->
            <TabItem x:Name="ScheduleTab" Header="Расписание" d:DataContext="{d:DesignInstance d:Type=local:ScheduleTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="ScheduleGrid" ItemsSource="{Binding Context.Schedules.Local}" SelectedItem="{Binding SelectedSchedule, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Тренер" Binding="{Binding Trainer.TrainerId}" />
                            <DataGridTextColumn Header="Рабочая смена" Binding="{Binding WorkShift.WorkShiftId}" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding ScheduleGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Subscription CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=ScheduleGrid, Path=Columns[0].Header, StringFormat={}{0}:}" />
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=ScheduleGrid, Path=Columns[1].Header, StringFormat={}{0}:}" />

                                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding ScheduleInfo.Trainer.TrainerId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding ScheduleInfo.Trainer.FirstName}" />
                                    </TextBlock>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding ScheduleInfo.WorkShift.DayOfWeek}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding ScheduleInfo.WorkShift.StartHour, StringFormat=\{0:HH mm\}}"/>
                                        <Run Text=" - " />
                                        <Run Text="{Binding ScheduleInfo.WorkShift.EndHour, StringFormat=\{0:HH mm\}}"/>
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Context.Trainers.Local}"
                                            SelectedItem="{Binding ScheduleInfo.Trainer}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Context.WorkShifts.Local}"
                                            SelectedItem="{Binding ScheduleInfo.WorkShift}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <Grid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Обновить" Command="{Binding UpdateScheduleCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddScheduleCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteScheduleCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < Schedule Filter > -->
                            <Expander Grid.Row="1"  Header="" IsEnabled="False">

                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Schedule TAB > -->

            <!-- < PersonalTraining TAB > -->
            <TabItem x:Name="PersonalTrainingTab" Header="Персональные" d:DataContext="{d:DesignInstance d:Type=local:PersonalTrainingTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="PersonalTrainingsGrid" ItemsSource="{Binding Context.PersonalTrainings.Local}" SelectedItem="{Binding SelectedPersonalTraining, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding PersonalTrainingId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}"/>
                            <DataGridTextColumn Header="Тренер" Binding="{Binding Trainer.TrainerId}"/>
                            <DataGridTextColumn Header="Дата" Binding="{Binding TrainingDate, StringFormat=\{0:dd MM yyyy\}}"/>
                            <DataGridTextColumn Header="Время" Binding="{Binding StartTime, StringFormat=\{0:HH mm\}}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding PersonalTrainingsGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < PersonalTraining CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="2*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=PersonalTrainingsGrid, Path=Columns[1].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="3" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=PersonalTrainingsGrid, Path=Columns[2].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=PersonalTrainingsGrid, Path=Columns[3].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="5" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=PersonalTrainingsGrid, Path=Columns[4].Header, StringFormat={}{0}:}"/>
                                    <TextBlock Grid.Row="0" Grid.Column="3" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding PersonalTrainingInfo.Client.ClientId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding PersonalTrainingInfo.Client.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding PersonalTrainingInfo.Client.LastName}" />
                                    </TextBlock>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding PersonalTrainingInfo.Trainer.TrainerId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding PersonalTrainingInfo.Trainer.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding PersonalTrainingInfo.Trainer.LastName}" />
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="3" ItemsSource="{Binding Context.Clients.Local}"
                                            SelectedItem="{Binding PersonalTrainingInfo.Client}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Context.Trainers.Local}"
                                            SelectedItem="{Binding PersonalTrainingInfo.Trainer}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <DatePicker Grid.Row="4" Grid.Column="1" Margin="3.2,3,2.6,3.6" DisplayDateStart="{x:Static local:DtHelper.ClientStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Now}"
                                                SelectedDate="{Binding PersonalTrainingInfo.TrainingDate, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper.ClientStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>
                                    <toolkit:TimePicker Grid.Row="5" Grid.Column="1" Value="{Binding PersonalTrainingInfo.StartTime}" Text="{Binding PersonalTrainingInfo.StartTime, Mode=TwoWay}" />

                                    <Grid Grid.Row="6" Grid.Column="0" Grid.ColumnSpan="2" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddPersonalTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdatePersonalTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeletePersonalTrainingCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < PersonalTraining Filter > -->
                            <Expander Grid.Row="1"  Header="Фильтры" IsExpanded="True">
                                <DataGrid Grid.Column="0" x:Name="SubscriptionClient1Grid" ItemsSource="{Binding PersonalTrainingInfo.Client.Subscriptions}" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}"/>
                                        <DataGridTextColumn Header="Тариф" Binding="{Binding Tariff.TariffId}"/>
                                        <DataGridTextColumn Header="Посещения" Binding="{Binding VisitLeft}" />
                                        <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTrainingLeft}" />
                                        <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTrainingLeft}" />
                                        <DataGridTextColumn Header="Покупка" Binding="{Binding BuyDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                        <DataGridTextColumn Header="Действен до" Binding="{Binding ValidityDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ PersonalTraining TAB > -->

            <!-- < TrainingInGroup TAB > -->
            <TabItem x:Name="TrainingInGroupTab" Header="Запись на групповые" d:DataContext="{d:DesignInstance d:Type=local:TrainingInGroupTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="TrainingInGroupGrid" ItemsSource="{Binding Context.TrainingInGroups.Local}" SelectedItem="{Binding SelectedTrainingInGroup, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}" />
                            <DataGridTextColumn Header="Групповая тренировка" Binding="{Binding GroupTraining.GroupTrainingId}" />
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TrainingInGroupGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < TrainingInGroup CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="1" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=TrainingInGroupGrid, Path=Columns[0].Header, StringFormat={}{0}:}" />
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=TrainingInGroupGrid, Path=Columns[1].Header, StringFormat={}{0}:}" />

                                    <TextBlock Grid.Row="0" Grid.Column="1" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding TrainingInGroupInfo.Client.ClientId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding TrainingInGroupInfo.Client.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding TrainingInGroupInfo.Client.LastName}" />
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Context.Clients.Local}"
                                            SelectedItem="{Binding TrainingInGroupInfo.Client}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <local:FilteredComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Context.GroupTrainings.Local}"
                                            SelectedItem="{Binding TrainingInGroupInfo.GroupTraining}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False" 
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddTrainingInGroupCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Обновить" Command="{Binding UpdateTrainingInGroupCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteTrainingInGroupCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < TrainingInGroup Filter > -->
                            <Expander Grid.Row="1"  Header="Абонемент" IsExpanded="True">
                                <DataGrid Grid.Column="0" x:Name="SubscriptionClient2Grid" ItemsSource="{Binding TrainingInGroupInfo.Client.Subscriptions}" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}"/>
                                        <DataGridTextColumn Header="Тариф" Binding="{Binding Tariff.TariffId}"/>
                                        <DataGridTextColumn Header="Посещения" Binding="{Binding VisitLeft}" />
                                        <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTrainingLeft}" />
                                        <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTrainingLeft}" />
                                        <DataGridTextColumn Header="Покупка" Binding="{Binding BuyDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                        <DataGridTextColumn Header="Действен до" Binding="{Binding ValidityDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ TrainingInGroup TAB > -->

            <!-- < Training TAB > -->
            <TabItem x:Name="TrainingTab" Header="Посещения" d:DataContext="{d:DesignInstance d:Type=local:TrainingTabViewModel, IsDesignTimeCreatable=True}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="5*"/>
                    </Grid.ColumnDefinitions>

                    <DataGrid Grid.Column="0" x:Name="TrainingsGrid" ItemsSource="{Binding Context.Trainings.Local}" SelectedItem="{Binding SelectedTraining, Mode=TwoWay}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="№" Binding="{Binding TrainingId}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}"/>
                            <DataGridTextColumn Header="Дата" Binding="{Binding TrainingDate, StringFormat=\{0:dd MM yyyy\}}"/>
                        </DataGrid.Columns>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding TrainingsGridSelectionChangedCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DataGrid>

                    <Border Grid.Column="1" BorderThickness="1" Margin="50" CornerRadius="10" BorderBrush="LightBlue">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <!-- < Training CRUD > -->
                            <Expander Grid.Row="0"  Header="Редактирование" IsExpanded="True">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="45*"/>
                                        <ColumnDefinition Width="92*"/>
                                        <ColumnDefinition Width="237*"/>
                                        <ColumnDefinition Width="373*"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,5,4.8,5" Text="{Binding ElementName=TrainingsGrid, Path=Columns[1].Header, StringFormat={}{0}:}" Grid.ColumnSpan="3"/>
                                    <TextBlock Grid.Row="2" Grid.Column="0" Margin="5,5,4.8,4.6" Text="{Binding ElementName=TrainingsGrid, Path=Columns[2].Header, StringFormat={}{0}:}" Grid.ColumnSpan="3"/>
                                    <TextBlock Grid.Row="0" Grid.Column="3" Margin="5,5,4.8,5" >
                                        <Run Text="№ " />
                                        <Run Text="{Binding TrainingInfo.Client.ClientId}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding TrainingInfo.Client.FirstName}" />
                                        <Run Text=" - " />
                                        <Run Text="{Binding TrainingInfo.Client.LastName}" />
                                    </TextBlock>

                                    <local:FilteredComboBox Grid.Row="1" Grid.Column="3" ItemsSource="{Binding Context.Clients.Local}"
                                            SelectedItem="{Binding TrainingInfo.Client}"
                                            IsEditable="True"
                                            IsTextSearchEnabled="False"
                                            StaysOpenOnEdit="True">
                                        <local:FilteredComboBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel VirtualizationMode="Recycling" />
                                            </ItemsPanelTemplate>
                                        </local:FilteredComboBox.ItemsPanel>
                                    </local:FilteredComboBox>

                                    <DatePicker Grid.Row="2" Grid.Column="3" Margin="3.2,3,2.6,3.6" DisplayDateStart="{x:Static local:DtHelper.ClientStartDate}" DisplayDateEnd="{x:Static sys:DateTime.Now}"
                                                SelectedDate="{Binding TrainingInfo.TrainingDate, Mode=TwoWay}">
                                        <DatePicker.BlackoutDates>
                                            <CalendarDateRange Start="{x:Static sys:DateTime.MinValue}" End="{x:Static local:DtHelper.ClientStartDate}"/>
                                        </DatePicker.BlackoutDates>
                                    </DatePicker>

                                    <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="10,9.4,-10.4,10.4" Width="{Binding RelativeSource={RelativeSource AncestorType=Grid, Mode=FindAncestor}, Path=ActualWidth}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="2*"/>
                                            <RowDefinition Height="1*"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="7" Padding="10,2,10,2" Content="Добавить" Command="{Binding AddTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="0" Margin="7" Padding="10,2,10,2" Content="Изменить" Command="{Binding UpdateTrainingCommand}"/>
                                        <Button Grid.Row="1" Grid.Column="1" Margin="7" Padding="10,2,10,2" Content="Удалить" Command="{Binding DeleteTrainingCommand}"/>
                                    </Grid>
                                </Grid>
                            </Expander>

                            <!-- < Training Filter > -->
                            <Expander Grid.Row="1"  Header="Абонимент" IsExpanded="True">
                                <DataGrid Grid.Column="0" x:Name="SubscriptionClientGrid" ItemsSource="{Binding TrainingInfo.Client.Subscriptions}" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Клиент" Binding="{Binding Client.ClientId}"/>
                                        <DataGridTextColumn Header="Тариф" Binding="{Binding Tariff.TariffId}"/>
                                        <DataGridTextColumn Header="Посещения" Binding="{Binding VisitLeft}" />
                                        <DataGridTextColumn Header="Персональные" Binding="{Binding PersonalTrainingLeft}"/>
                                        <DataGridTextColumn Header="Групповые" Binding="{Binding GroupTrainingLeft}" />
                                        <DataGridTextColumn Header="Покупка" Binding="{Binding BuyDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                        <DataGridTextColumn Header="Действен до" Binding="{Binding ValidityDate, StringFormat=\{0:dd MM yyyy\}}"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Expander>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
            <!-- </ Training TAB > -->
        </TabControl>
    </Grid>
</Window>
